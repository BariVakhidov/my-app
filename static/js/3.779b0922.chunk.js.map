{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","assets/images/plus.png","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","path","id","className","s","dialog","active","to","alt","userImg","src","photo","profilePhoto","activeClassName","name","Message","myMessage","currentUser","photos","large","profileImage","text","message","maxLength50","maxLength","NewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","TextArea","validate","required","StyledButton","Dialogs","chatFriends","getChatFriends","currentChatFriendsPage","setCurrentChatFriendsPage","currentPage","length","useEffect","isAuth","cn","isMobile","dialogsM","dialogs","dialogsBlack","blackTheme","dialogsItemsM","dialogsItems","dialogsItemsBlack","map","f","small","addDialog","onClick","plus","messages","messagesBlack","dialogsPage","messagesData","m","sentMessage","formData","sendMessage","newMessage","compose","connect","state","app","auth","withAuthRedirect"],"mappings":"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","file":"static/js/3.779b0922.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsM\":\"Dialogs_dialogsM__1-9GV\",\"dialogsBlack\":\"Dialogs_dialogsBlack__1BP3m\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialogsItemsM\":\"Dialogs_dialogsItemsM__2AxLm\",\"dialogsItemsBlack\":\"Dialogs_dialogsItemsBlack__2fpYg\",\"addDialog\":\"Dialogs_addDialog__d8fqN\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"userImg\":\"Dialogs_userImg__3Tuob\",\"messages\":\"Dialogs_messages__1w_Up\",\"messagesBlack\":\"Dialogs_messagesBlack__2nU7L\",\"sentMessage\":\"Dialogs_sentMessage__1dKK8\",\"button\":\"Dialogs_button__UnW0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\",\"myMessage\":\"Message_myMessage__6CULW\",\"userImg\":\"Message_userImg__VCAhi\",\"text\":\"Message_text__3SVVn\"};","import React from 'react';\nimport s from \"../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport profilePhoto from \"../../../assets/images/profile.jpg\"\n\nconst DialogsItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n        <div className={s.dialog + \" \" + s.active}>\n            <NavLink to={`/profile/${props.id}`}> <img alt=\"User\" className={s.userImg}\n                                 src={props.photo ? props.photo : profilePhoto}/></NavLink>\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\n        </div>\n    );\n};\nexport default DialogsItem;","import React from 'react';\nimport s from \"./Message.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport profileImage from \"../../../assets/images/profile.jpg\"\n\nconst Message = (props) => {\n    if (props.id % 2 === 0) {\n        return (\n            <div className={s.myMessage}>\n                <div>\n                    <img className={s.userImg} src={props.currentUser.photos.large || profileImage} alt=\"\"/>\n                </div>\n                <div className={s.text}>{props.message}</div>\n            </div>\n        );\n    }\n    return (\n        <div className={s.message}>\n            <div className={s.userImg}><NavLink to=\"/friends/id\"><img src={profileImage} alt=\"Friend\"/></NavLink></div>\n            <div className={s.text}>{props.message}</div>\n        </div>\n    );\n}\nexport default Message;","export default __webpack_public_path__ + \"static/media/plus.477bb5ec.png\";","import React, {useEffect} from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../common/FormsControls/FormsControl\";\nimport {maxLength, required} from \"../../utils/validators/validators\";\nimport cn from \"classnames\"\nimport StyledButton from \"../common/StyledButton\";\nimport plus from \"../../assets/images/plus.png\"\n\nconst Dialogs = ({chatFriends, getChatFriends, currentChatFriendsPage, setCurrentChatFriendsPage, ...props}) => {\n\n    let currentPage = chatFriends.length / 3;\n    useEffect(() => {\n        if (currentPage !== currentChatFriendsPage)\n            getChatFriends(currentChatFriendsPage);\n    }, [getChatFriends, currentChatFriendsPage, currentPage])\n    const onSubmit = (formData) => {\n        props.sendMessage(formData.newMessage);\n    }\n    if (!props.isAuth) return <Redirect to='/login'/>\n    return (\n        <div className={cn((!props.isMobile ? s.dialogs : s.dialogsM), {[s.dialogsBlack]: props.blackTheme})}>\n            <div>\n                <div\n                    className={cn((!props.isMobile ? s.dialogsItems : s.dialogsItemsM), {[s.dialogsItemsBlack]: props.blackTheme})}>{chatFriends.map(f =>\n                    <DialogsItem photo={f.photos.small} name={f.name} id={f.id} key={f.id}/>)}</div>\n                <div className={s.addDialog}>\n                    <img onClick={() => {\n                        setCurrentChatFriendsPage(currentChatFriendsPage + 1)\n                    }} alt=\"friend\"\n                         src={plus}/>\n                </div>\n            </div>\n            <div className={cn(s.messages, {[s.messagesBlack]: props.blackTheme})}>\n                <div>\n                    {props.dialogsPage.messagesData.map(m => <Message currentUser={props.currentUser}\n                                                                      message={m.message} id={m.id} key={m.id}/>)}\n                </div>\n                <div className={s.sentMessage}>\n                    <NewMessageReduxForm onSubmit={onSubmit}/>\n                </div>\n            </div>\n        </div>\n    );\n};\nconst maxLength50 = maxLength(50);\nconst NewMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={\"New message\"} name={\"newMessage\"} component={TextArea}\n                       validate={[required, maxLength50]}/>\n            </div>\n            <div>\n                <StyledButton>Send</StyledButton>\n            </div>\n        </form>\n    );\n};\nconst NewMessageReduxForm = reduxForm({form: 'newMessage'})(NewMessageForm)\nexport default Dialogs;\n","import {\n    getChatFriends,\n    sendMessage, setCurrentChatFriendsPage\n} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        blackTheme: state.app.blackTheme,\n        chatFriends: state.dialogsPage.chatFriends,\n        currentChatFriendsPage:state.dialogsPage.currentChatFriendsPage,\n        currentUser: state.auth.currentUser\n    };\n};\n\nexport default compose(connect(mapStateToProps, {sendMessage,getChatFriends,setCurrentChatFriendsPage}),withAuthRedirect)(Dialogs);\n"],"sourceRoot":""}